{
  "title": "Fields",
  "body": [
    {
      "type": "heading",
      "textAlign": "left",
      "level": 1,
      "content": [
        {
          "type": "text",
          "text": "Fields"
        }
      ]
    },
    {
      "type": "paragraph",
      "textAlign": "left",
      "content": [
        {
          "type": "text",
          "text": "Fields make data editable. Alinea ships with a lot of field types but can easily be expanded with "
        },
        {
          "type": "text",
          "text": "custom fields",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "data-id": "2YklnbZpfpvE0AR4C7PRVp22UEX",
                "data-entry": "286iEJsjhd8R9NxN6EVg59fELyd",
                "data-type": "entry",
                "href": null,
                "title": ""
              }
            }
          ]
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "id": "2YklqLFpIIeyPugEBoAD6iZSvtr",
      "type": "ExampleBlock",
      "code": "import {Field, Hint, Label} from 'alinea/core'\nimport {InputLabel, InputState, useInput} from 'alinea/editor'\n\ninterface RangeFieldOptions {\n  min?: number\n  max?: number\n}\n\nclass RangeField extends Field.Scalar<number, RangeFieldOptions> {\n}\n\nfunction range(label: Label, options: RangeFieldOptions = {}): RangeField {\n  return new RangeField({\n    hint: Hint.Number(),\n    label,\n    options,\n    view: RangeInput\n  })\n}\n\ninterface RangeInputProps {\n  state: InputState<InputState.Scalar<number>>\n  field: RangeField\n}\n\nfunction RangeInput({state, field}: RangeInputProps) {\n  const [value = 5, setValue] = useInput(state)\n  const {label, options} = field[Field.Data]\n  const {min = 0, max = 10} = options\n  return (\n    <InputLabel label={label}>\n      <input \n        type=\"range\" \n        min={min} max={max} \n        value={value} \n        onChange={e => setValue(Number(e.target.value))} \n      />\n    </InputLabel>\n  )\n}\n\nexport default alinea.type('Kitchen sink',\n  alinea.tabs(\n    alinea.tab('Basic fields', {\n      title: alinea.text('Text field'),\n      path: alinea.path('Path field', {\n        help: 'Creates a slug of the value of another field'\n      }),\n      richText: alinea.richText('Rich text field'),\n      select: alinea.select('Select field', {\n        a: 'Option a',\n        b: 'Option b'\n      }),\n      number: alinea.number('Number field', {\n        minValue: 0,\n        maxValue: 10\n      }),\n      check: alinea.check('Check field', {label: 'Check me please'}),\n      date: alinea.date('Date field'),\n      code: alinea.code('Code field')\n    }),\n    alinea.tab('Link fields', {\n      externalLink: alinea.url('External link'),\n      entry: alinea.entry('Internal link'),\n      linkMultiple: alinea.link.multiple('Mixed links, multiple'),\n      image: alinea.entry('Image link'),\n      file: alinea.entry('File link')\n    }),\n    alinea.tab('List fields', {\n      list: alinea.list('My list field', {\n        schema: alinea.schema({\n          Text: alinea.type('Text', {\n            title: alinea.text('Item title'),\n            text: alinea.richText('Item body text')\n          }),\n          Image: alinea.type('Image', {\n            image: alinea.image('Image')\n          })\n        })\n      })  \n    }),\n    alinea.tab('Inline fields', {\n      street: alinea.text('Street', {width: 0.6, inline: true, multiline: true}),\n      number: alinea.text('Number', {width: 0.2, inline: true}),\n      box: alinea.text('Box', {width: 0.2, inline: true}),\n      zip: alinea.text('Zipcode', {width: 0.2, inline: true}),\n      city: alinea.text('City', {width: 0.4, inline: true}),\n      country: alinea.text('Country', {\n        width: 0.4,\n        inline: true\n      })\n    }),\n    alinea.tab('Custom fields', {\n      range: range('Range field', {\n        help: 'See the custom field guide'\n      })  \n    })\n  )\n)\n"
    },
    {
      "type": "heading",
      "textAlign": "left",
      "level": 2,
      "content": [
        {
          "type": "text",
          "text": "Configuration"
        }
      ]
    },
    {
      "type": "paragraph",
      "textAlign": "left",
      "content": [
        {
          "type": "text",
          "text": "While every field will have unique properties, there are a few properties that are generally available."
        }
      ]
    },
    {
      "type": "paragraph",
      "textAlign": "left",
      "content": [
        {
          "type": "text",
          "text": "`initialValue`",
          "marks": [
            {
              "type": "bold"
            }
          ]
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Prefill the fields value."
        }
      ]
    },
    {
      "type": "paragraph",
      "textAlign": "left",
      "content": [
        {
          "type": "text",
          "text": "`hidden`",
          "marks": [
            {
              "type": "bold"
            }
          ]
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Hide this field in the dashboard but keep its value intact."
        }
      ]
    },
    {
      "type": "paragraph",
      "textAlign": "left",
      "content": [
        {
          "type": "text",
          "text": "`help`",
          "marks": [
            {
              "type": "bold"
            }
          ]
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Display a help text next to the fields label."
        }
      ]
    },
    {
      "type": "paragraph",
      "textAlign": "left",
      "content": [
        {
          "type": "text",
          "text": "`inline`",
          "marks": [
            {
              "type": "bold"
            }
          ]
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Show a minimal version of the field. In most cases this will mean the input label will be hidden, and the label will show up as a placeholder instead."
        }
      ]
    },
    {
      "type": "paragraph",
      "textAlign": "left",
      "content": [
        {
          "type": "text",
          "text": "`width`",
          "marks": [
            {
              "type": "bold"
            }
          ]
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Setting a width value will scale the fields width down, use a number between 0 and 1. This allows you to compose the dashboard UI better based on the content of the fields."
        }
      ]
    }
  ],
  "metadata": {
    "title": "",
    "description": "",
    "openGraph": {
      "title": "",
      "image": {},
      "description": ""
    }
  },
  "@alinea": {
    "entryId": "24yE2mu6Xq959jrP135Sdb4e3lG",
    "type": "Docs",
    "index": "Zn"
  }
}