{
  "id": "268hjH2OU9fiReg61Wov1SRbPD5",
  "type": "Doc",
  "title": "Rich text",
  "blocks": [
    {
      "id": "268hzy1CCrx0N9PlycpZlqjx0R9",
      "index": "a0",
      "type": "TextBlock",
      "text": [
        {
          "type": "heading",
          "level": 1,
          "textAlign": "left",
          "content": [
            {
              "type": "text",
              "text": "Rich text"
            }
          ]
        },
        {
          "type": "paragraph",
          "textAlign": "left",
          "content": [
            {
              "type": "text",
              "text": "Rich text can contain text marks like bold, italics or underline. Content can be structured using headings. It can even contain other types as blocks that can be moved around freely."
            }
          ]
        },
        {
          "id": "268iODr7pOAG2BeDXXfDEvDZYfr",
          "type": "CodeBlock",
          "code": "import {alinea} from 'alinea'\nalinea.richText('My rich text field', {\n  blocks: alinea.schema({\n    CodeBlock: CodeBlockSchema,\n    ImageBlock: ImageBlockSchema\n  })\n})"
        },
        {
          "id": "EuUkPtwTcHiQweiT_zZZI",
          "type": "ExampleBlock",
          "code": "import {alinea} from 'alinea'\nexport default alinea.richText('My rich text field')"
        },
        {
          "type": "heading",
          "textAlign": "left",
          "level": 2,
          "content": [
            {
              "type": "text",
              "text": "Rendering rich text"
            }
          ]
        },
        {
          "type": "paragraph",
          "textAlign": "left",
          "content": [
            {
              "type": "text",
              "text": "Rich text values are encoded in an array."
            }
          ]
        },
        {
          "id": "Lnc0CiaceUAYiYzl6sfwE",
          "type": "CodeVariantsBlock",
          "variants": [
            {
              "id": "pZZfVGHe4bIZGFtii-8zR",
              "index": "a0",
              "type": "Variant",
              "name": "JSON",
              "language": "tsx",
              "code": "[\n  {\n    \"type\": \"heading\",\n    \"level\": 1,\n    \"content\": [\n      {\n        \"type\": \"text\",\n        \"text\": \"Hello world\"\n      }\n    ]\n  },\n  {\n    \"type\": \"paragraph\",\n    \"content\": [\n      {\n        \"type\": \"text\",\n        \"text\": \"A paragraph follows\"\n      }\n    ]\n  }\n]"
            },
            {
              "id": "jKrgWIwJaQMb-XL58ZPcv",
              "index": "a1",
              "type": "Variant",
              "name": "Types",
              "language": "tsx",
              "code": "type TextDoc = Array<TextNode>\n\ntype TextNode = \n  | {\n    type: 'text'\n    text?: string\n    marks?: Array<{\n      type: string\n      attrs?: Record<string, string>\n    }>\n  }\n  | {\n    type: string\n    content?: TextDoc\n    [key: string]: any\n  }"
            }
          ]
        },
        {
          "type": "paragraph",
          "textAlign": "left",
          "content": [
            {
              "type": "text",
              "text": "In order to render this array in your app alinea provides a React component. By default it will use plain tags such as h1, h2, p, ul, li, etc. to represent the text. Any of these can be customized by either passing a React component or a vnode, of which we'll copy the type and props."
            }
          ]
        },
        {
          "id": "hOgtsNKgH3pWurn4Mb-td",
          "type": "CodeBlock",
          "code": "import {RichText} from 'alinea/ui'\n\n<RichText\n  doc={richTextValue}\n\n  // All of the properties below are optional\n\n  // Render plain text with a custom component\n  text={TextComponent}\n\n  // Attach a custom classname to paragraphs\n  p={<p className=\"my-p\" />}\n\n  // Use a custom component for h1 headings\n  h1={MyH1Heading}\n  \n  // Use a custom component for links\n  a={LinkComponent}\n\n  // Attach classes to list items\n  ul={<ul className=\"my-list\" />}\n  ol={<ol className=\"my-ordered-list\" />}\n  li={<li className=\"my-list-item\" />}\n\n  // More options\n  // b={<b />}\n  // i={<i />}\n  // u={<u />}\n  // hr={<hr />}\n  // br={<br />}\n  // small={<small />}\n  // blockquote={<blockquote />}\n/>"
        },
        {
          "type": "paragraph",
          "textAlign": "left",
          "content": [
            {
              "type": "text",
              "text": "The same principle is applied for custom blocks."
            }
          ]
        },
        {
          "id": "aQam3FUTLfN1uYyFFSiZk",
          "type": "CodeBlock",
          "code": "import {RichText} from 'alinea/ui'\nimport {MyBlock} from './MyBlock'\nimport {MyBlockSchema} from .js'./MyBlock.schema'\n\nconst MyBlockSchema = alinea.type('Custom block', {\n  property: alinea.text('Property')\n})\n\nfunction MyBlock({property}) {\n  return <span>{property}</span>\n}\n\n// Add to config\nalinea.richText('My rich text field', {\n  blocks: alinea.schema({\n    MyBlock: MyBlockSchema\n  })\n})\n\n// Render in page views\n<RichText\n  doc={richTextValue}\n\n  // Render instances of my custom block with the MyBlock view\n  MyBlock={MyBlock}\n/>"
        }
      ]
    },
    {
      "id": "286I7hBcY5VqUapFgpXsYjwKSS8",
      "index": "a1",
      "type": "TypesBlock",
      "types": "RichTextOptions"
    }
  ],
  "alinea": {
    "index": "a1"
  }
}
